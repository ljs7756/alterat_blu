<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<context:component-scan base-package="com.cha.transcoder" />

	<task:annotation-driven />
 
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<beans:bean
				class="com.cha.transcoder.common.resolver.CustomMapArgumentResolver"></beans:bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<beans:bean id="loggerInterceptor" class="com.cha.transcoder.LoggerInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<beans:bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />


    <!-- Resolves views selected for rendering by @Controllers to .jsp resources 
        in the /WEB-INF/views directory -->
    <!-- 
    <beans:bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/view/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>
    -->

	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
        
	<!-- 
    <beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		p:viewClass="org.springframework.web.servlet.view.JstlView"
        p:order="1" 
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp">
	</beans:bean>
    -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
        p:viewClass="org.springframework.web.servlet.view.JstlView"
        p:order="2" 
        p:prefix="/WEB-INF/jsp/" p:suffix=".jsp">
    </beans:bean>

    <!-- =============================================================  -->
    <!--  Tiles2 Config                                                 -->
    <!-- =============================================================  -->
    <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer"
            p:definitions="/WEB-INF/config/tiles/tiles.xml" />

    <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"
        p:viewClass="org.springframework.web.servlet.view.tiles2.TilesView"
        p:order="1" 
        p:cache="false">
    </beans:bean>

    <!-- 
    <beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"
        p:modelKey="result"/>
     -->
    <beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"/>
    <beans:bean id="jsonViewPrefix" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" p:prefixJson="true"/>
    
    
    <beans:bean id="monitorDAO" class="com.cha.transcoder.monitor.dao.MonitorDAO"></beans:bean> 
    <beans:bean id="profileDAO" class="com.cha.transcoder.profile.dao.ProfileDAO"></beans:bean> 
    
    <beans:bean id="fileutil" class="com.cha.transcoder.nps.FileUtils"></beans:bean> 
    <beans:bean id="soapManager" class="com.cha.transcoder.nps.SoapManager"></beans:bean> 
    
           
</beans:beans>
